# G'MIC extensions. Focused on RAW file processing
#

#@gmic l16develop : : Process linear 16 bit image.
l16develop :
   -e "Develop image$?."
   -v - -repeat @#
   -apply_gamma 2.2
   -contrast_stretch 0.005,0.005,16
   -done -v +

#@gmic l16develop_1 : : Process linear 16 bit image.
l16develop_1 :
   -e "Develop image$?."
   -v - -repeat @#
   -sigmoidal_contrast16 4,0.001	
   -apply_gamma 2.2
   -contrast_stretch 0.005,0.005,16
   -done -v +

#@gmic l16develop_2 : : Process linear 16 bit image.
l16develop_2 :
   -e "Develop image$?."
   -v - -repeat @#
   -apply_gamma 2.2
   -sigmoidal_contrast16 5,0.82	
   -contrast_stretch 0.005,0.005,16
   -done -v +

#@gmic l16develop_3 : : Process linear 16 bit image.
l16develop_3 :
   -e "Develop image$?."
   -v - -repeat @#
   -apply_gamma 2.2
   -sigmoidal_contrast16 3.3,0.52	
   -blackpoint16 .002 
   -contrast_stretch 0.004,0.003,16
   -done -v +

#@gmic g16develop : : Process 16 bit image that has gamma.
g16develop :
   -e "Develop image$?."
   -v - -repeat @#
   -sigmoidal_contrast16 4.8,.52 
   -blackpoint16 .007 
   -contrast_stretch 0.009,0.003,16 
   -done -v +

#@gmic l16develop_write_full : '"outfile"' : Develop a linear 16 bit image and write to 16 bit file.
l16develop_write_full :
   -e "Develop image$?."
   -v - -repeat @#
   -l16develop -write16 $1
   -done -v +

#@gmic l16develop_write_preview : '"outfile"' : Develop a linear 16 bit image, downsize it to preview size, and write to 8 bit file.
l16develop_write_preview :
   -e "Develop image$?."
   -v - -repeat @#
   -resize_named thebigpicture -l16develop -convert16to8 -write8 $1
   -done -v +

#@gmic sharpen_smooth : : Perform sharpening followed by smoothing, as a denoisement method
sharpen_smooth :
   -e "Sharpen and smooth image$?."
   -v - -type float -repeat @#
   -sharpen 50 -smooth 25
   -mul 256 
   -mv[-1] 0 -done -v +

#@gmic convert16to8 : : Convert image values retrieved in 16 bit to fit in 8 bit.
convert16to8 :
   -e "Converting to 8 bit for image$?."
   -v - -repeat @#
   -div 256
   -mv[-1] 0 -done -v +

#@gmic write16 : '"outfile"' : Write 16 bit image to file.
write16 :
   -e "Writing image$?."
   -v - -repeat @#
   -c 0,65536 -type ushort -o $1
   -mv[-1] 0 -done -v +

#@gmic write8 : '"outfile"' : Write 8 bit image to file.
write8 :
   -e "Writing image$?."
   -v - -repeat @#
   -c 0,255 -type uchar -o $1
   -mv[-1] 0 -done -v +

#@gmic blackpoint : black, bitdepth: Make certain percentage of the image black.
blackpoint: 
   -skip ${1=0.02},${2=8}
   -e "Black-pointing $2-bit image$? with black $1."
   -v - -repeat @#
   --histogram_cumul {2^$2}
   -div[-1] @{0,#}
   -push 0 -do -push=[-1] {@{*,-1}+1} -while {@{-1,@{*,-1}}<$1}
   -rm[-1]
   -v + -v + -v +  
   -cut {@{*,-1}},{2^$2-1} -sub {@{*,-1}}
   -v - -v - -v -
   -pop   
   -mv[-1] 0 -done -v +

#@gmic blackpoint8 : black: Make certain percentage of the image black.
blackpoint8: 
   -skip ${1=0.02}
   -e "Black-pointing image$? with black $1."
   -v - -repeat @#
   --histogram_cumul 256
   -div[-1] @{0,#}
   -push 0 -do -push=[-1] {@{*,-1}+1} -while {@{-1,@{*,-1}}<$1}
   -rm[-1]
   -cut {@{*,-1}},255 -sub {@{*,-1}}
   -pop   
   -mv[-1] 0 -done -v +

#@gmic blackpoint16 : black: Make certain percentage of the image black.
blackpoint16: 
   -skip ${1=0.02}
   -e "Black-pointing image$? with black $1."
   -v - -repeat @#
   --histogram_cumul 1024
   -div[-1] @{0,#}
   -push 0 -do -push=[-1] {@{*,-1}+1} -while {@{-1,@{*,-1}}<$1}
   -rm[-1]
   -cut {@{*,-1}},65535 -sub {@{*,-1}*64}
   -pop
   -mv[-1] 0 -done -v +

#@gmic whitepoint : white, bitdepth: Make certain percentage of the image white.
whitepoint: 
   -skip ${1=0.02}${2=8}
   -e "White-pointing $2-bit image$? with white $1."
   -v - -repeat @#
   --histogram_cumul {2^$2}
   -div[-1] @{0,#}
   -push {2^$2-1} -do -push=[-1] {@{*,-1}-1} -while {@{-1,@{*,-1}}>$1}
   -rm[-1]
   -f min({2^$2-1},i+@{*,-1})
   -pop
   -mv[-1] 0 -done -v +

#@gmic whitepoint8 : white: Make certain percentage of the image white.
whitepoint8: 
   -skip ${1=0.02}
   -e "Black-pointing image$? with black $1."
   -v - -repeat @#
   --histogram_cumul 256
   -div[-1] @{0,#}
   -push 255 -do -push=[-1] {@{*,-1}-1} -while {@{-1,@{*,-1}}>$1}
   -rm[-1]
   -f min(255,i+@{*,-1})
   -pop
   -mv[-1] 0 -done -v +


#@gmic omnistretch: black, white, colormodel, bit-depth: Experimental omnistretch
omnistretch:
   -skip ${1=0.02},${2=0.01},${3=0},${4=8}
   -e "Stretching contrast of $3-bit image$? with black $1 and white $2."
   -v - -repeat @#
   -if {$3==0} #RGB
      -contrast_stretch[-1] $1,$2,$4
   -elif {$3==1} #HSL
      -rgb2hsl[-1] -split[-1] c 
      -contrast_stretch[-3] $1,$2,$4 
      -append[-3--1] c -hsl2rgb[-1]
   -elif {$3==2} #HSV
      -rgb2hsv[-1] -split[-1] c 
      -contrast_stretch[-3] $1,$2,$4 
      -append[-3--1] c -hsv2rgb[-1]	
   -elif {$3==3} #HSI
      -rgb2hsi[-1] -split[-1] c 
      -contrast_stretch[-3] $1,$2,$4 
      -append[-3--1] c -hsi2rgb[-1]	
   -elif {$3==4} #LAB
      -rgb2lab[-1] -split[-1] c 
      -contrast_stretch[-3] $1,$2,$4 
      -append[-3--1] c -lab2rgb[-1]	
   -endif
   -mv[-1] 0 -done -v +

#@gmic contrast_stretch : black, white, bit-depth: Stretch contrast of image.
contrast_stretch: 
   -skip ${1=0.02},${2=0.01},${3=8}
   -e "Stretching contrast of $3-bit image$? with black $1 and white $2."
   -v - -repeat @#
   --histogram_cumul {if($3<=8,256,1024)}
   -div[-1] @{0,#} [-1]
   -push 0 -do -push=[-1] {@{*,-1}+1} -while {@{-1,@{*,-1}}<$1}
   -rm[-1]
   -push if($3<=8,256,1023) -do -push=[-1] {@{*,-1}-1} -while {@{-1,@{*,-1}}>(1-$2)}
   -rm[-1] 
   -_contrast_stretch {@{*,-2}*if($3<=8,1,64)},{@{*,-1}*if($3<=8,1,64)},0,{if($3<=8,255,65535)}
   -pop -pop
   -mv[-1] 0 -done -v +

#@gmic contrast_stretch8 : black, white: Stretch contrast of 8 bit image.
contrast_stretch8: 
   -skip ${1=0.02},${2=0.01}
   -e "Stretching contrast of image$? with black $1 and white $2."
   -v - -repeat @#
   --histogram_cumul 256
   -div[-1] @{0,#} [-1]
   -push 0 -do -push=[-1] {@{*,-1}+1} -while {@{-1,@{*,-1}}<$1}
   -rm[-1]
   -push 255 -do -push=[-1] {@{*,-1}-1} -while {@{-1,@{*,-1}}>(1-$2)}
   -rm[-1] 
   -_contrast_stretch {@{*,-2}},{@{*,-1}},0,255
   -pop -pop
   -mv[-1] 0 -done -v +

#@gmic contrast_stretch16 : black, white: Stretch contrast of 16 bit image.
contrast_stretch16: 
   -skip ${1=0.02},${2=0.01}
   -e "Stretching contrast of image$? with black $1 and white $2."
   -v - -repeat @#
   --histogram_cumul 1024
   -div[-1] @{0,#} [-1]
   -push 0 -do -push=[-1] {@{*,-1}+1} -while {@{-1,@{*,-1}}<$1}
   -rm[-1]
   -push 1023 -do -push=[-1] {@{*,-1}-1} -while {@{-1,@{*,-1}}>(1-$2)}
   -rm[-1] 
   -_contrast_stretch {{@{*,-2}}*64},{{@{*,-1}}*64},0,65535
   -pop -pop
   -mv[-1] 0 -done -v +

#@gmic _contrast_stretch : cut_low[%], cut_high, normalize_low, normalize_high : Stretch contrast of image.
_contrast_stretch :
   -e "Stretching contrast of image$? with $1,$2,$3,$4."
   -v - -repeat @#
   -c $1,$2 
   -n $3,$4
   -mv[-1] 0 -done -v +

#@gmic sigmoidal_contrast8 : contrast,midline: Apply sigmoidal function to 8 bit image.
sigmoidal_contrast8 :
   -skip ${1=3},${2=0.5}
   -e "Applying sigmoidal function on image$? using contrast $1 and midline $2."
   -v - -repeat @#
   -f A=1+exp($1);B=exp($1*($2-i/256));S=(1/(1+B)-1/A)/(1/(1+B/A));S*256
   -mv[-1] 0 -done -v +

#@gmic sigmoidal_contrast16 : contrast,midline: Apply sigmoidal function to 16 bit image.
sigmoidal_contrast16 :
   -skip ${1=3},${2=0.5}
   -e "Applying sigmoidal function on image$? using contrast $1 and midline $2."
   -v - -repeat @#
   -f A=1+exp($1);B=exp($1*($2-i/65536));S=(1/(1+B)-1/A)/(1/(1+B/A));S*65536
   -mv[-1] 0 -done -v +

#@gmic sigmoidal_contrast : contrast,midline: Apply sigmoidal function to n-bit image.
sigmoidal_contrast :
   -skip ${1=3},${2=0.5},${3=8}
   -e "Applying sigmoidal function on image$? using contrast $1 and midline $2."
   -v - -repeat @#
   -f A=1+exp($1);B=exp($1*($2-i/(2^$3)));S=(1/(1+B)-1/A)/(1/(1+B/A));S*(2^$3)
   -mv[-1] 0 -done -v +

color_boost :
   -e "Color boosting."
   -v - -repeat @#
    -rgb2lab[-1] -s[-1] c
    -*[-2] $1  
    -*[-1] $1 
    -a[-3--1] c -lab2rgb[-1]
   -mv[-1] 0 -done -v +

apply_sigmoidal_luminance:
   -e "Applying sigmoidal function on luminance channel for image$? using contrast $1 and midline $2."
   -v - -repeat @#
    -rgb2lab[-1] -s[-1] c
    -d[-3]
    -sigmoidal_contrast[-3] $1,$2,$3
    -d[-3]
    -a[-3--1] c -lab2rgb[-1]
   -mv[-1] 0 -done -v +

	
#@gmic disp8 : : Display 8-bit image, unnormalized.
disp8:
   -w -1,-1,0 -d

#@gmic disp16 : : Display 16-bit image, unnormalized.
disp16:
   -div 256 -w -1,-1,0 -d

#@gmic plot_rgb_histogram : : Plot image for RGB colors
plot_rgb_histogram:
   -e "Plot RGB histogram of image$?."
   -v - -repeat @#
   -s c -histogram 256 -a c -plot 3
   -done -v +

#@gmic plot_histogram : : Plot image for RGB colors
plot_histogram:
   -e "Plot RGB histogram of image$?."
   -v - -repeat @#
   -histogram 256 -plot 3
   -done -v +

#@gmic display_histogram : _width>0,_height>0,_clusters>0,_max_value>0,_show_axes={0|1} : Render a channel-by-channel histogram (eq. to '-dh').
display_histogram : -check "${1=512}>0 && ${2=200}>0 && ${3=256}>0 && ${4=255}" -skip ${5=1}
  -e[0--2] "Render $1x$2 channel-by-channel histogram of image$?, with $3 clusters and maximum value $4."
  -v -
  -repeat @#
    -l[-1] -s c -histogram $3,0,$4
    --max -p @{-1,M} -rm[-1]
    -repeat @#
      $1,$2,1,1,-255 -graph[-1] [-2],3,0,@{*,-1},0,1,0,0
      -rm[-2]
    -mv[-1] 0 -done
    -a c
    -axes[-1] 0,$4,@{*,-1},0,1,-128
    -pp[-1]
    -endl
    -+[-1] 255
  -mv[-1] 0 -done -v +

dh :
  -display_histogram $*

#@gmic strcmp : : Compare strings, returning 1 if they are equal, 0 if they are not
strcmp:
  -v - (0,{$1_}) (@{-1,w},{$2_}) -=[-2] @{-1,w} --[-2,-1] -abs[-1] -p {!@{-1,+}} -rm[-1] -v +

#@gmic resize_named : '"named_size"' : Resize the image to a named size. 
resize_named :
    -e "Resizing image image$? to $1 size."
    -v - -repeat @#

    # Screen resolutions
    -strcmp qqvga,$1
    -if @{*,-1}  
      -resize2dx 160,5
    -endif -pp[-1]

    -strcmp hqvga,$1 
    -if @{*,-1}  
      -resize2dx 240,5
    -endif -pp[-1]

    -strcmp qvga,$1 
    -if @{*,-1}  
      -resize2dx 320,5
    -endif -pp[-1]

    -strcmp wqvga,$1 
    -if @{*,-1}  
      -resize2dx 480,5
    -endif -pp[-1]

    -strcmp vga,$1 
    -if @{*,-1}  
      -resize2dx 680,5
    -endif -pp[-1]

    -strcmp svga,$1 
    -if @{*,-1}  
      -resize2dx 800,5
    -endif -pp[-1]

    -strcmp xga,$1 
    -if @{*,-1}  
      -resize2dx 1024,5
    -endif -pp[-1]

    -strcmp sxga,$1 
    -if @{*,-1}  
      -resize2dx 1280,5
    -endif -pp[-1]

    -strcmp wxga,$1 
    -if @{*,-1}  
      -resize2dx 1366,5
    -endif -pp[-1]

    -strcmp wsxga,$1 
    -if @{*,-1}  
      -resize2dx 1440,5
    -endif -pp[-1]

    -strcmp wsxga+,$1 
    -if @{*,-1}  
      -resize2dx 1680,5
    -endif -pp[-1]

    -strcmp wuxga,$1 
    -if @{*,-1}  
      -resize2dx 1920,5
    -endif -pp[-1]

    -strcmp wqxga,$1 
    -if @{*,-1}  
      -resize2dx 2560,5
    -endif -pp[-1]

    -strcmp wquxga,$1 
    -if @{*,-1}  
      -resize2dx 3840,5
    -endif -pp[-1]

    # Web inspired

    -strcmp flickr_large,$1 
    -if @{*,-1}  
      -resize2dx 1024,5
    -endif -pp[-1]

    -strcmp thebigpicture,$1 
    -if @{*,-1}  
      -resize2dx 990,5
    -endif -pp[-1] 

    # Camera specific
    
    -strcmp 400D_preview,$1 
    -if @{*,-1}  
      -resize2dx 1936,5
    -endif -pp[-1] 
    
    -mv[-1] 0 -done -v +


#@gmic retinex : '"named_size"' : Experimental retinex command. 
retinex:
   -e "Retinex processing"
   -v - -repeat @#
   [0] [0] [0] [0] [0]
   -_retinex_blur[1] 2
   -_retinex_blur[2] 8
   -_retinex_blur[3] 20
   -_retinex_blur[4] 100
   -_retinex_gray[5] 
   -compose_average[1,2]	
   -compose_average[2,3]	
   -compose_average[1,2]	
   [1]
   -compose_multiply[1,2]
   -normalize[1] 0,255
   -normalize[2] 0,255
   -add[1,2]
   -normalize[1] 0,255
   -rm[0]		
   -mv[-1] 0 -done -v +	     

_retinex_blur: 
   [0] -blur[1] $1 -div[0] [1] -add 1 -log[0] -rm[1]

_retinex_gray: 
   [0] -to_gray[1] -div[0] [1] -add 1 -log[0] -rm[1]

#
# Gimp
#

#@gimp _<b>Lightroom</b>
#----------------------


#@gimp Contrast stretch : gimp_contrast_stretch, gimp_contrast_stretch	
#@gimp : Black = float(0.02,0,1)
#@gimp : White = float(0.01,0,1)
gimp_contrast_stretch:
    -contrast_stretch8 $1,$2

#@gimp Sigmoidal contrast : gimp_sigmoidal_contrast, gimp_sigmoidal_contrast	
#@gimp : Contrast = float(5,0,20)
#@gimp : Midline = float(0.5,0,1)
gimp_sigmoidal_contrast:
    -sigmoidal_contrast8 $1,$2

#@gimp Sigmoidal luminance : gimp_sigmoidal_luminance,gimp_sigmoidal_luminance
#@gimp : Contrast = float(5,1,9)
#@gimp : Midline = float(0.5,0,1)
gimp_sigmoidal_luminance:
    -apply_sigmoidal_luminance $1,$2,8

#@gimp Blackpoint : gimp_blackpoint, gimp_blackpoint	
#@gimp : Black = float(0.01,0,1)
gimp_blackpoint:
    -blackpoint8 $1

#@gimp Whitepoint : gimp_whitepoint, gimp_whitepoint	
#@gimp : White = float(0.01,0,1)
gimp_whitepoint:
    -whitepoint8 $1

#@gimp Develop 1: gimp_develop1, gimp_develop1
#@gimp : note = note{"<b>Sigmoidal contrast, blackpoint, contrast stretch</b>"}
#@gimp : Contrast = float(5,0,20)
#@gimp : Midline = float(0.5,0,1)
#@gimp : Blackpoint = float(0.01,0,1)
#@gimp : Black stretch= float(0.02,0,1)
#@gimp : White stretch = float(0.01,0,1)
gimp_develop1 :
   -sigmoidal_contrast8 $1,$2
   -blackpoint8 $3
   -contrast_stretch $4,$5

#@gimp Develop 2 : gimp_develop2, gimp_develop2
#@gimp : note = note{"<b>Sigmoidal luminance, blackpoint, contrast stretch</b>"}
#@gimp : Contrast = float(4,3,5)
#@gimp : Midline = float(0.50,0,1)
#@gimp : Blackpoint = float(0.01,0,1)
#@gimp : Black stretch= float(0.01,0,1)
#@gimp : White stretch = float(0.01,0,1)
gimp_develop2 :
   -apply_sigmoidal_luminance $1,$2,8
   -blackpoint8 $3
   -contrast_stretch $4,$5

# #@gimp Omnistretch : gimp_omnistretch, gimp_omnistretch
# #@gimp : Black stretch= float(0.01,0,1)
# #@gimp : White stretch = float(0.01,0,1)
# #@gimp : Color model = choice(0,"RGB", "HSL", "HSV", "HSI", "LAB")
# gimp_omnistretch :
#    -omnistretch  $1,$2,$3,8

#@gimp _
